Database-
use pizza_sales;

SOLVED QUERIES:

Basic (SOLVED):
Retrieve the total number of orders placed.

SELECT 
    COUNT(*) AS total_orders
FROM
    orders;

Calculate the total revenue generated from pizza sales.

SELECT 
    ROUND(SUM(p.price * o.quantity),2) AS total_sales
FROM
    pizzas AS p
        JOIN
    order_details AS o ON p.pizza_id = o.pizza_id;

Identify the highest-priced pizza.

SELECT 
    p.price AS price, pt.name AS name
FROM
    pizzas AS p
        JOIN
    pizza_types AS pt ON p.pizza_type_id = pt.pizza_type_id
ORDER BY p.price DESC
LIMIT 1;

Identify the most common pizza size ordered.

SELECT 
    p.size, COUNT(o.order_details_id) AS order_count
FROM
    pizzas AS p
        JOIN
    order_details AS o ON p.pizza_id = o.pizza_id
GROUP BY p.size
ORDER BY order_count DESC;

List the top 5 most ordered pizza types along with their quantities.

SELECT 
    pt.name AS pizza_name, SUM(o.quantity) AS pizza_quantity
FROM
    order_details AS o
        JOIN
    pizzas AS p ON o.pizza_id = p.pizza_id
        JOIN
    pizza_types AS pt ON PT.pizza_type_id = P.pizza_type_id
GROUP BY pizza_name
ORDER BY pizza_quantity DESC
LIMIT 5;



Intermediate (SOLVED):
Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT 
    pt.category AS category, SUM(o.quantity) AS quantity
FROM
    pizza_types AS pt
        JOIN
    pizzas AS p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details AS o ON o.pizza_id = p.pizza_id
GROUP BY category
ORDER BY quantity;

Determine the distribution of orders by hour of the day.

SELECT 
    HOUR(order_time) AS hour, COUNT(order_id) AS order_count
FROM
    orders
GROUP BY hour;

Join relevant tables to find the category-wise distribution of pizzas.

SELECT 
    category, COUNT(name) AS count
FROM
    pizza_types
GROUP BY category;

Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT 
    ROUND(AVG(quantity), 0) AS avg_quantity_order
FROM
    (SELECT 
        orders.order_date AS date,
            SUM(order_details.quantity) AS quantity
    FROM
        orders
    JOIN order_details ON orders.order_id = order_details.order_id
    GROUP BY date) AS order_quantity;

Determine the top 3 most ordered pizza types based on revenue.

SELECT 
    pizza_types.name AS name,
    SUM(pizzas.price * order_details.quantity) AS revenue
FROM
    pizzas
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
        JOIN
    pizza_types ON pizza_types.pizza_type_id = pizzas.pizza_type_id
GROUP BY pizza_types.name
ORDER BY revenue DESC
LIMIT 3;


Advanced (SOLVED):
Calculate the percentage contribution of each pizza type to total revenue.

By using sub-query-

SELECT pizza_types.category AS category, 
ROUND(SUM(pizzas.price * order_details.quantity) /
(SELECT 
    ROUND(SUM(p.price * o.quantity),2) AS total_sales
FROM
    pizzas AS p
        JOIN
    order_details AS o ON p.pizza_id = o.pizza_id) * 100,2) AS revenue_percentage
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY category
ORDER BY revenue_percentage DESC;

Analyze the cumulative revenue generated over time.

SELECT date, SUM(revenue) OVER(order by date) AS cum_revenue
FROM
(SELECT orders.order_date AS date,
SUM(pizzas.price * order_details.quantity) AS revenue
FROM orders
JOIN order_details ON orders.order_id = order_details.order_id
JOIN pizzas ON pizzas.pizza_id = order_details.pizza_id
GROUP BY date) AS sales;

Determine the top 3 most ordered pizza types based on revenue for each pizza category.

By using the Window Function-

SELECT name, revenue
FROM
(SELECT category, name, revenue,
RANK() OVER (PARTITION BY category ORDER BY revenue DESC) AS rn
FROM
(SELECT 
    pizza_types.category,
    pizza_types.name,
    SUM(order_details.quantity * pizzas.price) AS revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizzas.pizza_type_id = pizza_types.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category , pizza_types.name) AS a ) AS b
WHERE rn <= 3; 


Thank You
